{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","eventHandler","e","setState","key","document","addEventListener","this","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,2BAFhB,EAaEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,WAAW,4BAAD,OAA8BE,EAAEE,IAAhC,QAd9B,uDAKE,WACEC,SAASC,iBAAiB,QAAUC,KAAKN,gBAN7C,kCASE,WACEI,SAASC,iBAAiB,QAAUC,KAAKN,gBAV7C,oBAiBE,WACE,IAAQD,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGR,UAvBX,GAAyBS,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.6dd1eb4d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: 'Nothing was pressed yet',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (this.eventHandler));\n  }\n\n  componentWillUnmount() {\n    document.addEventListener('keyup', (this.eventHandler));\n  }\n\n  eventHandler = (e: KeyboardEvent) => {\n    this.setState({ pressedKey: `The last pressed key is [${e.key}]` });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {pressedKey}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}